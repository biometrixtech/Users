# A template that creates an environment
#
# Copyright 2017 Melon Software Ltd (UK), all rights reserved.  Used under license.
#
AWSTemplateFormatVersion: "2010-09-09"
Description: "Creates an environment for user management"

Parameters:

    # Environment name
    Environment:
        Type: "String"
        Description: "The name of the environment"
        
Resources:

    ##########################################################################################################
    ##  AUTHENTICATION
    ##########################################################################################################    

    CustomAuthLambdaExecutionRole:
        Type: "AWS::IAM::Role"
        Properties:
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                  - Effect: "Allow"
                    Principal: { Service: [ "lambda.amazonaws.com" ] }
                    Action: "sts:AssumeRole"
            ManagedPolicyArns:
              - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
            Policies:
              - PolicyName: "default"
                PolicyDocument:
                    Version: "2012-10-17"
                    Statement:
                      - Action:
                          - "dynamodb:GetItem"
                        Effect: "Allow"
                        Resource: { "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/alerts-${Environment}-*" }
            RoleName: { "Fn::Sub": "users-${Environment}-apigateway-authenticate-${AWS::Region}" }

    CustomAuthLambda:
        Type: "AWS::Lambda::Function"
        Properties:
            Code:
                S3Bucket: { "Fn::Sub": "biometrix-infrastructure-${AWS::Region}" }
                S3Key: { "Fn::Sub": "lambdas/users-${Environment}/custom_auth.zip" }
            Handler: "custom_auth.handler"
            Runtime: "python3.6"
            Timeout: "1"
            Role: { "Fn::GetAtt" : [ "CustomAuthLambdaExecutionRole", "Arn" ] }
            FunctionName: { "Fn::Sub": "users-${Environment}-apigateway-authenticate" }
            Tags:
              - { Key: "Name", Value: { "Fn::Sub": "users-${Environment}-apigateway-authenticate" } }
              - { Key: "Management", Value: "managed" }
              - { Key: "Project", Value: "users" }
              - { Key: "Environment", Value: { Ref: "Environment" } }
              - { Key: "Service", Value: "apigateway" }

    ##########################################################################################################
    ##  OUTPUTS
    ##########################################################################################################

Outputs:

    CustomAuthLambdaArn:
        Description: "The ARN of the Lambda function that can be used as a custom authorizer in API Gateway"
        Value: { "Fn::GetAtt": [ "CustomAuthLambda", "Arn" ] }
        Export:
            Name: { "Fn::Sub": "users-${Environment}-CustomAuthLambdaArn" }
